/**
 * „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
 * 
 * Ë®≠Ë®àÂèÇÁÖß: UI-requirements.md ¬ß 2.2 „É°„Ç§„É≥„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥
 * ÊäÄË°ì‰ªïÊßò: technical-requirements.md ¬ß 4.1 „Éö„Éº„Ç∏ÊßãÊàê
 * 
 * Èñ¢ÈÄ£„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà:
 * - DashboardLayout: „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„É¨„Ç§„Ç¢„Ç¶„Éà„Åß‰ΩøÁî®
 * - ÂêÑ„Éö„Éº„Ç∏: „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„ÄÅ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÄÅ„Ç¢„Éº„Ç´„Ç§„Éñ
 * 
 * ÂÆüË£ÖË¶Å‰ª∂:
 * - „Éò„ÉÉ„ÉÄ„ÉºÂõ∫ÂÆöË°®Á§∫Ôºà„Çπ„ÇØ„É≠„Éº„É´ÊôÇ„ÇÇÂ∏∏„Å´Ë°®Á§∫Ôºâ
 * - „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„Éú„Çø„É≥Ôºö„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„ÄÅ„Éó„É≠„Ç∏„Çß„ÇØ„ÉàË®≠ÂÆö„ÄÅ„Ç¢„Éº„Ç´„Ç§„Éñ„ÄÅ„É≠„Ç∞„Ç¢„Ç¶„Éà
 * - „É¨„Çπ„Éù„É≥„Ç∑„ÉñÂØæÂøúÔºà„É¢„Éê„Ç§„É´„Åß„ÅØÊäò„ÇäËøî„ÅóÔºâ
 */

'use client'

import Link from 'next/link'
import { usePathname } from 'next/navigation'
import Button from './Button'
import { useAuth } from '@/hooks/useAuth'

export default function Navigation() {
  const pathname = usePathname()
  const { user, signOut } = useAuth()
  
  const navItems = [
    { href: '/dashboard', label: '„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ', icon: 'üìä' },
    { href: '/projects', label: '„Éó„É≠„Ç∏„Çß„ÇØ„ÉàË®≠ÂÆö', icon: '‚öôÔ∏è' },
    { href: '/archive', label: '„Ç¢„Éº„Ç´„Ç§„Éñ', icon: 'üì¶' },
  ]
  
  const isActive = (href: string) => pathname.startsWith(href)
  
  const handleLogout = async () => {
    try {
      await signOut()
    } catch (error) {
      console.error('„É≠„Ç∞„Ç¢„Ç¶„Éà„Ç®„É©„Éº:', error)
    }
  }
  
  return (
    <nav className="fixed top-0 left-0 right-0 z-50 bg-white border-b border-gray-200">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          {/* „É≠„Ç¥ */}
          <div className="flex items-center">
            <Link href="/dashboard" className="flex items-center space-x-2">
              <span className="text-2xl font-bold bg-gradient-primary bg-clip-text text-transparent">
                Focus Goal
              </span>
            </Link>
          </div>
          
          {/* „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„É™„É≥„ÇØ */}
          <div className="flex items-center space-x-2 md:space-x-4">
            {navItems.map((item) => (
              <Link
                key={item.href}
                href={item.href}
                className={`
                  px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200
                  ${isActive(item.href)
                    ? 'bg-primary-500 text-white'
                    : 'text-gray-700 hover:text-gray-900 hover:bg-gray-100'
                  }
                `}
              >
                <span className="hidden sm:inline">{item.icon}</span>
                <span className="ml-1">{item.label}</span>
              </Link>
            ))}
            
            {/* „É¶„Éº„Ç∂„ÉºÊÉÖÂ†±„Å®„É≠„Ç∞„Ç¢„Ç¶„Éà */}
            <div className="flex items-center ml-2 md:ml-4 space-x-3">
              {user && (
                <div className="hidden md:block text-sm text-gray-600">
                  {user.email}
                </div>
              )}
              <Button
                variant="secondary"
                size="sm"
                onClick={handleLogout}
              >
                „É≠„Ç∞„Ç¢„Ç¶„Éà
              </Button>
            </div>
          </div>
        </div>
      </div>
    </nav>
  )
}